name: Deploy naekaracubae-scraping

on:
  push:
    branches:
      - feature/deploy_lambda
  pull_request:
    branches:
      - main
      - develop

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
#  lint:
#    name: Lint files
#    runs-on: 'ubuntu-latest'
#    steps:
#      - uses: actions/checkout@v2.3.5
#      - uses: actions/setup-go@v2
#        with:
#          go-version: '1.16.4'
#      - name: golangci-lint
#        uses: golangci/golangci-lint-action@v2.5.2
#        with:
#          version: latest
  test:
    name: Run tests
    runs-on: 'ubuntu-latest'
#    needs: lint
    steps:
      - uses: actions/checkout@v2.3.5
      - uses: actions/setup-go@v2
        with:
          go-version: '1.16.4'
      - run: go test -v -cover
  build:
    name: Build binary
    runs-on: 'ubuntu-latest'
    needs: test
    strategy:
      matrix:
        goosarch:
          - 'linux/amd64'
    steps:
      - name: Checkout code
        uses: actions/checkout@v2.3.5
      - uses: actions/setup-go@v2
        with:
          go-version: '1.16.4'
      - name: Get OS and arch info
        run: |
          GOOSARCH=${{matrix.goosarch}}
          GOOS=${GOOSARCH%/*}
          GOARCH=${GOOSARCH#*/}
          BINARY_NAME=${{github.repository}}-$GOOS-$GOARCH
          echo "BINARY_NAME=$BINARY_NAME" >> $GITHUB_ENV
          echo "GOOS=$GOOS" >> $GITHUB_ENV
          echo "GOARCH=$GOARCH" >> $GITHUB_ENV
      - name: Build
        run: |
          go build -o "$BINARY_NAME" -v
      # Run build of the application
#      - name: Run build
#        run: go build .
#      - name: Configure AWS Credentials
#        uses: aws-actions/configure-aws-credentials@v1
#        with:
#          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#          aws-region: us-east-1
#      - name: deploy
#        run: |
#          npx ncc build index.ts
#          zip -j deploy.zip ./dist/*
#          aws lambda update-function-code --function-name=lambda-gh-action --zip-file=fileb://deploy.zip
